version: "3"
services:
  proxy:
    profiles:
      - development:ssl
    image: nginx:1.19.10-alpine
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    volumes:
      - ./proxy/conf/nginx.conf.template:/etc/nginx/templates/nginx.conf.template
      - ./proxy/certs:/etc/nginx/certs
    depends_on:
      - app-ssl
    networks:
      - mynetwork
    links:
      - app-ssl
    environment:
      NGINX_HOST: ${NGINX_HOST}
      FRONTEND_PORT: ${FRONTEND_PORT}
  app:
    profiles:
      - development
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    networks:
      - mynetwork
    environment:
      CHOKIDAR_USEPOLLING: 1
      PORT: ${FRONTEND_PORT}
      NODE_ENV: ${NODE_ENV}
      REACT_APP_PROXY_URL: ${REACT_APP_PROXY_URL}
      DATABASE_URL: "pg://${DB_USER}:${DB_PASS}@postgres:5432/${DB_NAME}"
      SESSION_SECRET: ${SESSION_SECRET}
      AUTH_NAVER_CALLBACK_URL: "${AUTH_NAVER_CALLBACK_HOST}:${FRONTEND_PORT}/api/auth/naver/callback"
      AUTH_NAVER_CLIENT_ID: ${AUTH_NAVER_CLIENT_ID}
      AUTH_NAVER_CLIENT_SECRET: ${AUTH_NAVER_CLIENT_SECRET}
      AUTH_GITHUB_CALLBACK_URL: "${AUTH_GITHUB_CALLBACK_HOST}:${FRONTEND_PORT}/api/auth/github/callback"
      AUTH_GITHUB_CLIENT_ID: ${AUTH_GITHUB_CLIENT_ID}
      AUTH_GITHUB_CLIENT_SECRET: ${AUTH_GITHUB_CLIENT_SECRET}
      IMGUR_CLIENT_ID: ${IMGUR_CLIENT_ID}
    command: bash -c 'yarn set version berry && yarn install && yarn plugin import workspace-tools && (yarn workspace @team-10/frontend run ${NODE_ENV} & PORT=${BACKEND_PORT} yarn workspace @team-10/backend run ${NODE_ENV})'
    volumes:
      - ./packages/lib/:/app/packages/lib/
      - ./packages/frontend/:/app/packages/frontend/
      - ./packages/backend/:/app/packages/backend/
      - ./.yarn/:/app/.yarn/:Z
  app-ssl:
    profiles:
      - development:ssl
      - production
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - ${FRONTEND_PORT}
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    networks:
      - mynetwork
    environment:
      CHOKIDAR_USEPOLLING: 1
      PORT: ${FRONTEND_PORT}
      NODE_ENV: ${NODE_ENV}
      REACT_APP_PROXY_URL: ${REACT_APP_PROXY_URL}
      DATABASE_URL: "pg://${DB_USER}:${DB_PASS}@postgres:5432/${DB_NAME}"
      SESSION_SECRET: ${SESSION_SECRET}
      AUTH_NAVER_CALLBACK_URL: "${AUTH_NAVER_CALLBACK_HOST}:${FRONTEND_PORT}/api/auth/naver/callback"
      AUTH_NAVER_CLIENT_ID: ${AUTH_NAVER_CLIENT_ID}
      AUTH_NAVER_CLIENT_SECRET: ${AUTH_NAVER_CLIENT_SECRET}
      AUTH_GITHUB_CALLBACK_URL: "${AUTH_GITHUB_CALLBACK_HOST}:${FRONTEND_PORT}/api/auth/github/callback"
      AUTH_GITHUB_CLIENT_ID: ${AUTH_GITHUB_CLIENT_ID}
      AUTH_GITHUB_CLIENT_SECRET: ${AUTH_GITHUB_CLIENT_SECRET}
      IMGUR_CLIENT_ID: ${IMGUR_CLIENT_ID}
    command: bash -c 'yarn set version berry && yarn install && yarn plugin import workspace-tools && (yarn workspace @team-10/frontend run ${NODE_ENV} & PORT=${BACKEND_PORT} yarn workspace @team-10/backend run ${NODE_ENV})'
    volumes:
      - ./packages/lib/:/app/packages/lib/
      - ./packages/frontend/:/app/packages/frontend/
      - ./packages/backend/:/app/packages/backend/
      - ./.yarn/:/app/.yarn/:Z
  postgres:
    image: postgres:10.4
    profiles:
      - development
      - development:ssl
      - production
    ports:
      - "35432:5432"
    networks:
      - mynetwork
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}

networks:
  mynetwork:

volumes:
  letsencrypt:
